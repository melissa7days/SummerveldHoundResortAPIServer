// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SummerveldHoundResortAPIServer.Data;

namespace SummerveldHoundResortAPIServer.Migrations
{
    [DbContext(typeof(DoggoDataContext))]
    [Migration("20201201155519_migration5")]
    partial class migration5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.Adopted", b =>
                {
                    b.Property<int>("AdoptedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("AdoptedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("AdoptedDateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Pawrents")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("VirtualAdoptionId")
                        .HasColumnType("int");

                    b.HasKey("AdoptedId");

                    b.HasIndex("VirtualAdoptionId");

                    b.ToTable("adopted");
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.CustomModels.LifeEventViewModel", b =>
                {
                    b.Property<int>("LifeEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DoggoDateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DoggoDescription")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DoggoId")
                        .HasColumnType("int");

                    b.Property<string>("DoggoName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DoggoNickname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DoggoProfilePic")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("IconId")
                        .HasColumnType("int");

                    b.Property<string>("IconSrcUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LifeEventDate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("LifeEventDateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LifeEventName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LifeEventId");

                    b.ToTable("lifeEventViewModel");
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.Doggo", b =>
                {
                    b.Property<int>("DoggoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DoggoDateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DoggoDescription")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DoggoName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DoggoNickname")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DoggoProfilePic")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("DoggoId");

                    b.ToTable("doggo");
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.DoggoAlbum", b =>
                {
                    b.Property<int>("DoggoAlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DoggoAlbumDateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DoggoAlbumName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DoggoId")
                        .HasColumnType("int");

                    b.HasKey("DoggoAlbumId");

                    b.HasIndex("DoggoId");

                    b.ToTable("doggoAlbum");
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.DoggoContent", b =>
                {
                    b.Property<int>("DoggoContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DoggoAlbumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DoggoContentDateCreated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("DoggoContentId");

                    b.HasIndex("DoggoAlbumId");

                    b.ToTable("doggoContent");
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.DoggoFriend", b =>
                {
                    b.Property<int>("DoggoFriendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DoggoTypeId")
                        .HasColumnType("int");

                    b.HasKey("DoggoFriendId");

                    b.HasIndex("DoggoTypeId");

                    b.ToTable("doggoFriend");
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.DoggoPhoto", b =>
                {
                    b.Property<int>("DoggoPhotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DoggoContentId")
                        .HasColumnType("int");

                    b.Property<string>("DoggoPhotoDescription")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DoggoPhotoUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("DoggoPhotoId");

                    b.HasIndex("DoggoContentId");

                    b.ToTable("doggoPhoto");
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.DoggoType", b =>
                {
                    b.Property<int>("DoggoTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DoggoId")
                        .HasColumnType("int");

                    b.Property<string>("DoggoTypeStatus")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("DoggoTypeId");

                    b.HasIndex("DoggoId");

                    b.ToTable("doggoType");
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.DoggoVideo", b =>
                {
                    b.Property<int>("DoggoVideoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DoggoContentId")
                        .HasColumnType("int");

                    b.Property<string>("DoggoVideoDescription")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DoggoVideoUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("DoggoVideoId");

                    b.HasIndex("DoggoContentId");

                    b.ToTable("doggoVideo");
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.Icon", b =>
                {
                    b.Property<int>("IconId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("IconSrcUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("IconId");

                    b.ToTable("icon");
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.Intro", b =>
                {
                    b.Property<int>("IntroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DoggoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("IntroDateCreated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IntroId");

                    b.HasIndex("DoggoId");

                    b.ToTable("intro");
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.LifeEvent", b =>
                {
                    b.Property<int>("LifeEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DoggoId")
                        .HasColumnType("int");

                    b.Property<int>("IconId")
                        .HasColumnType("int");

                    b.Property<string>("LifeEventDate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("LifeEventDateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LifeEventName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LifeEventId");

                    b.HasIndex("DoggoId");

                    b.HasIndex("IconId");

                    b.ToTable("lifeEvent");
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.VirtualAdoption", b =>
                {
                    b.Property<int>("VirtualAdoptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DoggoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsAdopted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("VirtualAdoptionId");

                    b.HasIndex("DoggoId");

                    b.ToTable("virtualAdoption");
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.Adopted", b =>
                {
                    b.HasOne("SummerveldHoundResortAPIServer.Models.VirtualAdoption", "VirtualAdoption")
                        .WithMany()
                        .HasForeignKey("VirtualAdoptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.DoggoAlbum", b =>
                {
                    b.HasOne("SummerveldHoundResortAPIServer.Models.Doggo", "Doggo")
                        .WithMany()
                        .HasForeignKey("DoggoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.DoggoContent", b =>
                {
                    b.HasOne("SummerveldHoundResortAPIServer.Models.DoggoAlbum", "DoggoAlbum")
                        .WithMany()
                        .HasForeignKey("DoggoAlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.DoggoFriend", b =>
                {
                    b.HasOne("SummerveldHoundResortAPIServer.Models.DoggoType", "DoggoType")
                        .WithMany()
                        .HasForeignKey("DoggoTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.DoggoPhoto", b =>
                {
                    b.HasOne("SummerveldHoundResortAPIServer.Models.DoggoContent", "DoggoContent")
                        .WithMany()
                        .HasForeignKey("DoggoContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.DoggoType", b =>
                {
                    b.HasOne("SummerveldHoundResortAPIServer.Models.Doggo", "Doggo")
                        .WithMany()
                        .HasForeignKey("DoggoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.DoggoVideo", b =>
                {
                    b.HasOne("SummerveldHoundResortAPIServer.Models.DoggoContent", "DoggoContent")
                        .WithMany()
                        .HasForeignKey("DoggoContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.Intro", b =>
                {
                    b.HasOne("SummerveldHoundResortAPIServer.Models.Doggo", "Doggo")
                        .WithMany()
                        .HasForeignKey("DoggoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.LifeEvent", b =>
                {
                    b.HasOne("SummerveldHoundResortAPIServer.Models.Doggo", "Doggo")
                        .WithMany()
                        .HasForeignKey("DoggoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SummerveldHoundResortAPIServer.Models.Icon", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SummerveldHoundResortAPIServer.Models.VirtualAdoption", b =>
                {
                    b.HasOne("SummerveldHoundResortAPIServer.Models.Doggo", "Doggo")
                        .WithMany()
                        .HasForeignKey("DoggoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
